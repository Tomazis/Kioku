// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: kioku/srv-dba/v1/srv-dba-word-progress.proto

package srv_dba

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WordProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Word       *Word                  `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	SrsLevel   uint32                 `protobuf:"varint,3,opt,name=srs_level,json=srsLevel,proto3" json:"srs_level,omitempty"`
	UnlockDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=unlock_date,json=unlockDate,proto3" json:"unlock_date,omitempty"`
	NextDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	BurnDate   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=burn_date,json=burnDate,proto3" json:"burn_date,omitempty"`
}

func (x *WordProgress) Reset() {
	*x = WordProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordProgress) ProtoMessage() {}

func (x *WordProgress) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordProgress.ProtoReflect.Descriptor instead.
func (*WordProgress) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{0}
}

func (x *WordProgress) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WordProgress) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

func (x *WordProgress) GetSrsLevel() uint32 {
	if x != nil {
		return x.SrsLevel
	}
	return 0
}

func (x *WordProgress) GetUnlockDate() *timestamppb.Timestamp {
	if x != nil {
		return x.UnlockDate
	}
	return nil
}

func (x *WordProgress) GetNextDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextDate
	}
	return nil
}

func (x *WordProgress) GetBurnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BurnDate
	}
	return nil
}

type GetWordProgressByIdV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WordId uint64 `protobuf:"varint,2,opt,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
}

func (x *GetWordProgressByIdV1Request) Reset() {
	*x = GetWordProgressByIdV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWordProgressByIdV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordProgressByIdV1Request) ProtoMessage() {}

func (x *GetWordProgressByIdV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordProgressByIdV1Request.ProtoReflect.Descriptor instead.
func (*GetWordProgressByIdV1Request) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{1}
}

func (x *GetWordProgressByIdV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWordProgressByIdV1Request) GetWordId() uint64 {
	if x != nil {
		return x.WordId
	}
	return 0
}

type GetWordProgressByIdV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordProgress *WordProgress `protobuf:"bytes,1,opt,name=word_progress,json=wordProgress,proto3" json:"word_progress,omitempty"`
}

func (x *GetWordProgressByIdV1Response) Reset() {
	*x = GetWordProgressByIdV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWordProgressByIdV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordProgressByIdV1Response) ProtoMessage() {}

func (x *GetWordProgressByIdV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordProgressByIdV1Response.ProtoReflect.Descriptor instead.
func (*GetWordProgressByIdV1Response) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{2}
}

func (x *GetWordProgressByIdV1Response) GetWordProgress() *WordProgress {
	if x != nil {
		return x.WordProgress
	}
	return nil
}

type ListWordProgressByIdsV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WordId []uint64 `protobuf:"varint,2,rep,packed,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
}

func (x *ListWordProgressByIdsV1Request) Reset() {
	*x = ListWordProgressByIdsV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordProgressByIdsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordProgressByIdsV1Request) ProtoMessage() {}

func (x *ListWordProgressByIdsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordProgressByIdsV1Request.ProtoReflect.Descriptor instead.
func (*ListWordProgressByIdsV1Request) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{3}
}

func (x *ListWordProgressByIdsV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListWordProgressByIdsV1Request) GetWordId() []uint64 {
	if x != nil {
		return x.WordId
	}
	return nil
}

type ListWordProgressByTimeV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit  uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListWordProgressByTimeV1Request) Reset() {
	*x = ListWordProgressByTimeV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordProgressByTimeV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordProgressByTimeV1Request) ProtoMessage() {}

func (x *ListWordProgressByTimeV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordProgressByTimeV1Request.ProtoReflect.Descriptor instead.
func (*ListWordProgressByTimeV1Request) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{4}
}

func (x *ListWordProgressByTimeV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListWordProgressByTimeV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWordProgressByTimeV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListWordProgressBySrsLevelV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SrsLevel uint32 `protobuf:"varint,2,opt,name=srs_level,json=srsLevel,proto3" json:"srs_level,omitempty"`
	Limit    uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   uint64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListWordProgressBySrsLevelV1Request) Reset() {
	*x = ListWordProgressBySrsLevelV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordProgressBySrsLevelV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordProgressBySrsLevelV1Request) ProtoMessage() {}

func (x *ListWordProgressBySrsLevelV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordProgressBySrsLevelV1Request.ProtoReflect.Descriptor instead.
func (*ListWordProgressBySrsLevelV1Request) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{5}
}

func (x *ListWordProgressBySrsLevelV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListWordProgressBySrsLevelV1Request) GetSrsLevel() uint32 {
	if x != nil {
		return x.SrsLevel
	}
	return 0
}

func (x *ListWordProgressBySrsLevelV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListWordProgressBySrsLevelV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListWordProgressV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordProgress []*WordProgress `protobuf:"bytes,1,rep,name=word_progress,json=wordProgress,proto3" json:"word_progress,omitempty"`
}

func (x *ListWordProgressV1Response) Reset() {
	*x = ListWordProgressV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWordProgressV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWordProgressV1Response) ProtoMessage() {}

func (x *ListWordProgressV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWordProgressV1Response.ProtoReflect.Descriptor instead.
func (*ListWordProgressV1Response) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{6}
}

func (x *ListWordProgressV1Response) GetWordProgress() []*WordProgress {
	if x != nil {
		return x.WordProgress
	}
	return nil
}

type AddWordProgressV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WordId []uint64 `protobuf:"varint,2,rep,packed,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
}

func (x *AddWordProgressV1Request) Reset() {
	*x = AddWordProgressV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWordProgressV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWordProgressV1Request) ProtoMessage() {}

func (x *AddWordProgressV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWordProgressV1Request.ProtoReflect.Descriptor instead.
func (*AddWordProgressV1Request) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{7}
}

func (x *AddWordProgressV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddWordProgressV1Request) GetWordId() []uint64 {
	if x != nil {
		return x.WordId
	}
	return nil
}

type UpdateWordProgressV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgressId uint64                 `protobuf:"varint,1,opt,name=progress_id,json=progressId,proto3" json:"progress_id,omitempty"`
	SrsLevel   uint32                 `protobuf:"varint,2,opt,name=srs_level,json=srsLevel,proto3" json:"srs_level,omitempty"`
	NextDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=next_date,json=nextDate,proto3" json:"next_date,omitempty"`
	BurnDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=burn_date,json=burnDate,proto3" json:"burn_date,omitempty"`
}

func (x *UpdateWordProgressV1Request) Reset() {
	*x = UpdateWordProgressV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWordProgressV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWordProgressV1Request) ProtoMessage() {}

func (x *UpdateWordProgressV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWordProgressV1Request.ProtoReflect.Descriptor instead.
func (*UpdateWordProgressV1Request) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateWordProgressV1Request) GetProgressId() uint64 {
	if x != nil {
		return x.ProgressId
	}
	return 0
}

func (x *UpdateWordProgressV1Request) GetSrsLevel() uint32 {
	if x != nil {
		return x.SrsLevel
	}
	return 0
}

func (x *UpdateWordProgressV1Request) GetNextDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextDate
	}
	return nil
}

func (x *UpdateWordProgressV1Request) GetBurnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BurnDate
	}
	return nil
}

type DefaultWordProgressV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DefaultWordProgressV1Response) Reset() {
	*x = DefaultWordProgressV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultWordProgressV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultWordProgressV1Response) ProtoMessage() {}

func (x *DefaultWordProgressV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultWordProgressV1Response.ProtoReflect.Descriptor instead.
func (*DefaultWordProgressV1Response) Descriptor() ([]byte, []int) {
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP(), []int{9}
}

func (x *DefaultWordProgressV1Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_kioku_srv_dba_v1_srv_dba_word_progress_proto protoreflect.FileDescriptor

var file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6b, 0x69, 0x6f, 0x6b, 0x75, 0x2f, 0x73, 0x72, 0x76, 0x2d, 0x64, 0x62, 0x61, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x72, 0x76, 0x2d, 0x64, 0x62, 0x61, 0x2d, 0x77, 0x6f, 0x72, 0x64, 0x2d,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x6b, 0x69, 0x6f, 0x6b, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76,
	0x5f, 0x64, 0x62, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x6b, 0x69, 0x6f, 0x6b, 0x75, 0x2f, 0x73, 0x72, 0x76, 0x2d, 0x64, 0x62, 0x61, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x72, 0x76, 0x2d, 0x64, 0x62, 0x61, 0x2d, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x69, 0x6f, 0x6b, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x5f, 0x64, 0x62, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x64, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x72, 0x73, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x72, 0x73,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x62,
	0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x75, 0x72, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x62, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6b, 0x69, 0x6f, 0x6b, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x73, 0x72, 0x76, 0x5f, 0x64, 0x62, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x69, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92,
	0x01, 0x06, 0x22, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x7b, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x32, 0x03, 0x10, 0xe8, 0x07, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xa7, 0x01,
	0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x79, 0x53, 0x72, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x72, 0x73, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a,
	0x04, 0x18, 0x09, 0x20, 0x00, 0x52, 0x08, 0x73, 0x72, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1e, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x32, 0x03, 0x10, 0xe8, 0x07, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6b,
	0x69, 0x6f, 0x6b, 0x75, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x72, 0x76, 0x5f,
	0x64, 0x62, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x63, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x42, 0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x09, 0x73, 0x72, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x09, 0x20, 0x00, 0x52, 0x08,
	0x73, 0x72, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x75, 0x72, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x1d, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6f, 0x6d, 0x61, 0x7a, 0x69, 0x73, 0x2f, 0x6b, 0x69, 0x6f, 0x6b,
	0x75, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x76, 0x2d, 0x64, 0x62, 0x61,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x72, 0x76, 0x2d, 0x64, 0x62, 0x61, 0x3b, 0x73, 0x72, 0x76,
	0x5f, 0x64, 0x62, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescOnce sync.Once
	file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescData = file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDesc
)

func file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescGZIP() []byte {
	file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescOnce.Do(func() {
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescData = protoimpl.X.CompressGZIP(file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescData)
	})
	return file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDescData
}

var file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_kioku_srv_dba_v1_srv_dba_word_progress_proto_goTypes = []interface{}{
	(*WordProgress)(nil),                        // 0: kioku.server.srv_dba.v1.WordProgress
	(*GetWordProgressByIdV1Request)(nil),        // 1: kioku.server.srv_dba.v1.GetWordProgressByIdV1Request
	(*GetWordProgressByIdV1Response)(nil),       // 2: kioku.server.srv_dba.v1.GetWordProgressByIdV1Response
	(*ListWordProgressByIdsV1Request)(nil),      // 3: kioku.server.srv_dba.v1.ListWordProgressByIdsV1Request
	(*ListWordProgressByTimeV1Request)(nil),     // 4: kioku.server.srv_dba.v1.ListWordProgressByTimeV1Request
	(*ListWordProgressBySrsLevelV1Request)(nil), // 5: kioku.server.srv_dba.v1.ListWordProgressBySrsLevelV1Request
	(*ListWordProgressV1Response)(nil),          // 6: kioku.server.srv_dba.v1.ListWordProgressV1Response
	(*AddWordProgressV1Request)(nil),            // 7: kioku.server.srv_dba.v1.AddWordProgressV1Request
	(*UpdateWordProgressV1Request)(nil),         // 8: kioku.server.srv_dba.v1.UpdateWordProgressV1Request
	(*DefaultWordProgressV1Response)(nil),       // 9: kioku.server.srv_dba.v1.DefaultWordProgressV1Response
	(*Word)(nil),                                // 10: kioku.server.srv_dba.v1.Word
	(*timestamppb.Timestamp)(nil),               // 11: google.protobuf.Timestamp
}
var file_kioku_srv_dba_v1_srv_dba_word_progress_proto_depIdxs = []int32{
	10, // 0: kioku.server.srv_dba.v1.WordProgress.word:type_name -> kioku.server.srv_dba.v1.Word
	11, // 1: kioku.server.srv_dba.v1.WordProgress.unlock_date:type_name -> google.protobuf.Timestamp
	11, // 2: kioku.server.srv_dba.v1.WordProgress.next_date:type_name -> google.protobuf.Timestamp
	11, // 3: kioku.server.srv_dba.v1.WordProgress.burn_date:type_name -> google.protobuf.Timestamp
	0,  // 4: kioku.server.srv_dba.v1.GetWordProgressByIdV1Response.word_progress:type_name -> kioku.server.srv_dba.v1.WordProgress
	0,  // 5: kioku.server.srv_dba.v1.ListWordProgressV1Response.word_progress:type_name -> kioku.server.srv_dba.v1.WordProgress
	11, // 6: kioku.server.srv_dba.v1.UpdateWordProgressV1Request.next_date:type_name -> google.protobuf.Timestamp
	11, // 7: kioku.server.srv_dba.v1.UpdateWordProgressV1Request.burn_date:type_name -> google.protobuf.Timestamp
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_kioku_srv_dba_v1_srv_dba_word_progress_proto_init() }
func file_kioku_srv_dba_v1_srv_dba_word_progress_proto_init() {
	if File_kioku_srv_dba_v1_srv_dba_word_progress_proto != nil {
		return
	}
	file_kioku_srv_dba_v1_srv_dba_word_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWordProgressByIdV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWordProgressByIdV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordProgressByIdsV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordProgressByTimeV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordProgressBySrsLevelV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWordProgressV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWordProgressV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWordProgressV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultWordProgressV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kioku_srv_dba_v1_srv_dba_word_progress_proto_goTypes,
		DependencyIndexes: file_kioku_srv_dba_v1_srv_dba_word_progress_proto_depIdxs,
		MessageInfos:      file_kioku_srv_dba_v1_srv_dba_word_progress_proto_msgTypes,
	}.Build()
	File_kioku_srv_dba_v1_srv_dba_word_progress_proto = out.File
	file_kioku_srv_dba_v1_srv_dba_word_progress_proto_rawDesc = nil
	file_kioku_srv_dba_v1_srv_dba_word_progress_proto_goTypes = nil
	file_kioku_srv_dba_v1_srv_dba_word_progress_proto_depIdxs = nil
}
