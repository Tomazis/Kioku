syntax = "proto3";

package kioku.server.srv_dba.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

import "kioku/srv-dba/v1/srv-dba-kanji.proto";
import "kioku/srv-dba/v1/srv-dba-word.proto";
import "kioku/srv-dba/v1/srv-dba-kanji-progress.proto";
import "kioku/srv-dba/v1/srv-dba-word-progress.proto";

option go_package = "github.com/tomazis/kioku/server/srv-dba/pkg/srv-dba;srv_dba";

// SrvFrontendApiService - Service for managing the API server
service SrvDbaService {
    //Kanji part
    rpc GetKanjiByIdV1(GetKanjiByIdV1Request) returns (GetKanjiByIdV1Response) {
        option (google.api.http) = {
            get: "/v1/kanji/{kanji_id}"
        };
    }

    rpc ListKanjiByLevelV1(ListKanjiByLevelV1Request) returns (ListKanjiV1Response) {
        option (google.api.http) = {
            get: "/v1/kanjis/{level}"
        };
    }

    rpc ListKanjiByIdsV1(ListKanjiByIdsV1Request) returns (ListKanjiV1Response) {
        option (google.api.http) = {
            post: "/v1/kanjis"
        };
    }


    //Words part
    rpc GetWordByIdV1(GetWordByIdV1Request) returns (GetWordByIdV1Response) {
        option (google.api.http) = {
            get: "/v1/word/{word_id}"
        };
    }

    rpc ListWordsByLevelV1(ListWordsByLevelV1Request) returns (ListWordsV1Response) {
        option (google.api.http) = {
            get: "/v1/words/{level}"
        };
    }

    rpc ListWordsByKanjiV1(ListWordsByKanjiV1Request) returns (ListWordsV1Response) {
        option (google.api.http) = {
            get: "/v1/words/kanji/{kanji_id}"
        };
    }

    rpc ListWordsByIdsV1(ListWordsByIdsV1Request) returns (ListWordsV1Response) {
        option (google.api.http) = {
            get: "/v1/words"
        };
    }

    //KanjiProgress part
    rpc GetKanjiProgressByIdV1(GetKanjiProgressByIdV1Request) returns (GetKanjiProgressByIdV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/kanji"
        };
    }

    rpc ListKanjiProgressByTimeV1(ListKanjiProgressByTimeV1Request) returns (ListKanjiProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/kanjis"
        };
    }

    rpc ListKanjiProgressByIdsV1(ListKanjiProgressByIdsV1Request) returns (ListKanjiProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/kanji/ids"
        };
    }

    rpc ListKanjiProgressBySrsLevelV1(ListKanjiProgressBySrsLevelV1Request) returns (ListKanjiProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/kanjis"
        };
    }

    rpc AddKanjiProgressV1(AddKanjiProgressV1Request) returns (DefaultKanjiProgressV1Response) {
        option (google.api.http) = {
            put: "/v1/progress/kanji"
        };
    }

    rpc UpdateKanjiProgressV1(UpdateKanjiProgressV1Request) returns (DefaultKanjiProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/kanji"
        };
    }

    //WordProgress part
    rpc GetWordProgressByIdV1(GetWordProgressByIdV1Request) returns (GetWordProgressByIdV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/word"
        };
    }

    rpc ListWordProgressByTimeV1(ListWordProgressByTimeV1Request) returns (ListWordProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/words"
        };
    }

    rpc ListWordProgressByIdsV1(ListWordProgressByIdsV1Request) returns (ListWordProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/word/ids"
        };
    }

    rpc ListWordProgressBySrsLevelV1(ListWordProgressBySrsLevelV1Request) returns (ListWordProgressV1Response) {
        option (google.api.http) = {
            post: "/v1/progress/words"
        };
    }

    
}